"""
CFFI-generated stub file.
This file was automatically generated from C declarations.
"""

from typing import Any, Literal, Tuple

# Enums
PN_DIST_MODE_UNSPECIFIED: Literal[0]  # pn_distribution_mode_t
PN_DIST_MODE_COPY: Literal[1]  # pn_distribution_mode_t
PN_DIST_MODE_MOVE: Literal[2]  # pn_distribution_mode_t
PN_NONDURABLE: Literal[0]  # pn_durability_t
PN_CONFIGURATION: Literal[1]  # pn_durability_t
PN_DELIVERIES: Literal[2]  # pn_durability_t
PN_EVENT_NONE: Literal[0]  # pn_event_type_t
PN_REACTOR_INIT: Literal[1]  # pn_event_type_t
PN_REACTOR_QUIESCED: Literal[2]  # pn_event_type_t
PN_REACTOR_FINAL: Literal[3]  # pn_event_type_t
PN_TIMER_TASK: Literal[4]  # pn_event_type_t
PN_CONNECTION_INIT: Literal[5]  # pn_event_type_t
PN_CONNECTION_BOUND: Literal[6]  # pn_event_type_t
PN_CONNECTION_UNBOUND: Literal[7]  # pn_event_type_t
PN_CONNECTION_LOCAL_OPEN: Literal[8]  # pn_event_type_t
PN_CONNECTION_REMOTE_OPEN: Literal[9]  # pn_event_type_t
PN_CONNECTION_LOCAL_CLOSE: Literal[10]  # pn_event_type_t
PN_CONNECTION_REMOTE_CLOSE: Literal[11]  # pn_event_type_t
PN_CONNECTION_FINAL: Literal[12]  # pn_event_type_t
PN_SESSION_INIT: Literal[13]  # pn_event_type_t
PN_SESSION_LOCAL_OPEN: Literal[14]  # pn_event_type_t
PN_SESSION_REMOTE_OPEN: Literal[15]  # pn_event_type_t
PN_SESSION_LOCAL_CLOSE: Literal[16]  # pn_event_type_t
PN_SESSION_REMOTE_CLOSE: Literal[17]  # pn_event_type_t
PN_SESSION_FINAL: Literal[18]  # pn_event_type_t
PN_LINK_INIT: Literal[19]  # pn_event_type_t
PN_LINK_LOCAL_OPEN: Literal[20]  # pn_event_type_t
PN_LINK_REMOTE_OPEN: Literal[21]  # pn_event_type_t
PN_LINK_LOCAL_CLOSE: Literal[22]  # pn_event_type_t
PN_LINK_REMOTE_CLOSE: Literal[23]  # pn_event_type_t
PN_LINK_LOCAL_DETACH: Literal[24]  # pn_event_type_t
PN_LINK_REMOTE_DETACH: Literal[25]  # pn_event_type_t
PN_LINK_FLOW: Literal[26]  # pn_event_type_t
PN_LINK_FINAL: Literal[27]  # pn_event_type_t
PN_DELIVERY: Literal[28]  # pn_event_type_t
PN_TRANSPORT: Literal[29]  # pn_event_type_t
PN_TRANSPORT_AUTHENTICATED: Literal[30]  # pn_event_type_t
PN_TRANSPORT_ERROR: Literal[31]  # pn_event_type_t
PN_TRANSPORT_HEAD_CLOSED: Literal[32]  # pn_event_type_t
PN_TRANSPORT_TAIL_CLOSED: Literal[33]  # pn_event_type_t
PN_TRANSPORT_CLOSED: Literal[34]  # pn_event_type_t
PN_SELECTABLE_INIT: Literal[35]  # pn_event_type_t
PN_SELECTABLE_UPDATED: Literal[36]  # pn_event_type_t
PN_SELECTABLE_READABLE: Literal[37]  # pn_event_type_t
PN_SELECTABLE_WRITABLE: Literal[38]  # pn_event_type_t
PN_SELECTABLE_ERROR: Literal[39]  # pn_event_type_t
PN_SELECTABLE_EXPIRED: Literal[40]  # pn_event_type_t
PN_SELECTABLE_FINAL: Literal[41]  # pn_event_type_t
PN_CONNECTION_WAKE: Literal[42]  # pn_event_type_t
PN_LISTENER_ACCEPT: Literal[43]  # pn_event_type_t
PN_LISTENER_CLOSE: Literal[44]  # pn_event_type_t
PN_PROACTOR_INTERRUPT: Literal[45]  # pn_event_type_t
PN_PROACTOR_TIMEOUT: Literal[46]  # pn_event_type_t
PN_PROACTOR_INACTIVE: Literal[47]  # pn_event_type_t
PN_LISTENER_OPEN: Literal[48]  # pn_event_type_t
PN_RAW_CONNECTION_CONNECTED: Literal[49]  # pn_event_type_t
PN_RAW_CONNECTION_CLOSED_READ: Literal[50]  # pn_event_type_t
PN_RAW_CONNECTION_CLOSED_WRITE: Literal[51]  # pn_event_type_t
PN_RAW_CONNECTION_DISCONNECTED: Literal[52]  # pn_event_type_t
PN_RAW_CONNECTION_NEED_READ_BUFFERS: Literal[53]  # pn_event_type_t
PN_RAW_CONNECTION_NEED_WRITE_BUFFERS: Literal[54]  # pn_event_type_t
PN_RAW_CONNECTION_READ: Literal[55]  # pn_event_type_t
PN_RAW_CONNECTION_WRITTEN: Literal[56]  # pn_event_type_t
PN_RAW_CONNECTION_WAKE: Literal[57]  # pn_event_type_t
PN_RAW_CONNECTION_DRAIN_BUFFERS: Literal[58]  # pn_event_type_t
PN_EXPIRE_WITH_LINK: Literal[0]  # pn_expiry_policy_t
PN_EXPIRE_WITH_SESSION: Literal[1]  # pn_expiry_policy_t
PN_EXPIRE_WITH_CONNECTION: Literal[2]  # pn_expiry_policy_t
PN_EXPIRE_NEVER: Literal[3]  # pn_expiry_policy_t
PN_RCV_FIRST: Literal[0]  # pn_rcv_settle_mode_t
PN_RCV_SECOND: Literal[1]  # pn_rcv_settle_mode_t
PN_SASL_NONE: Literal[-1]  # pn_sasl_outcome_t
PN_SASL_OK: Literal[0]  # pn_sasl_outcome_t
PN_SASL_AUTH: Literal[1]  # pn_sasl_outcome_t
PN_SASL_SYS: Literal[2]  # pn_sasl_outcome_t
PN_SASL_PERM: Literal[3]  # pn_sasl_outcome_t
PN_SASL_TEMP: Literal[4]  # pn_sasl_outcome_t
PN_SND_UNSETTLED: Literal[0]  # pn_snd_settle_mode_t
PN_SND_SETTLED: Literal[1]  # pn_snd_settle_mode_t
PN_SND_MIXED: Literal[2]  # pn_snd_settle_mode_t
PN_SSL_CERT_SUBJECT_COUNTRY_NAME: Literal[0]  # pn_ssl_cert_subject_subfield
PN_SSL_CERT_SUBJECT_STATE_OR_PROVINCE: Literal[1]  # pn_ssl_cert_subject_subfield
PN_SSL_CERT_SUBJECT_CITY_OR_LOCALITY: Literal[2]  # pn_ssl_cert_subject_subfield
PN_SSL_CERT_SUBJECT_ORGANIZATION_NAME: Literal[3]  # pn_ssl_cert_subject_subfield
PN_SSL_CERT_SUBJECT_ORGANIZATION_UNIT: Literal[4]  # pn_ssl_cert_subject_subfield
PN_SSL_CERT_SUBJECT_COMMON_NAME: Literal[5]  # pn_ssl_cert_subject_subfield
PN_SSL_SHA1: Literal[0]  # pn_ssl_hash_alg
PN_SSL_SHA256: Literal[1]  # pn_ssl_hash_alg
PN_SSL_SHA512: Literal[2]  # pn_ssl_hash_alg
PN_SSL_MD5: Literal[3]  # pn_ssl_hash_alg
PN_SSL_MODE_CLIENT: Literal[1]  # pn_ssl_mode_t
PN_SSL_MODE_SERVER: Literal[2]  # pn_ssl_mode_t
PN_SSL_RESUME_UNKNOWN: Literal[0]  # pn_ssl_resume_status_t
PN_SSL_RESUME_NEW: Literal[1]  # pn_ssl_resume_status_t
PN_SSL_RESUME_REUSED: Literal[2]  # pn_ssl_resume_status_t
PN_SSL_VERIFY_NULL: Literal[0]  # pn_ssl_verify_mode_t
PN_SSL_VERIFY_PEER: Literal[1]  # pn_ssl_verify_mode_t
PN_SSL_ANONYMOUS_PEER: Literal[2]  # pn_ssl_verify_mode_t
PN_SSL_VERIFY_PEER_NAME: Literal[3]  # pn_ssl_verify_mode_t
PN_UNSPECIFIED: Literal[0]  # pn_terminus_type_t
PN_SOURCE: Literal[1]  # pn_terminus_type_t
PN_TARGET: Literal[2]  # pn_terminus_type_t
PN_COORDINATOR: Literal[3]  # pn_terminus_type_t
PN_NULL: Literal[1]  # pn_type_t
PN_BOOL: Literal[2]  # pn_type_t
PN_UBYTE: Literal[3]  # pn_type_t
PN_BYTE: Literal[4]  # pn_type_t
PN_USHORT: Literal[5]  # pn_type_t
PN_SHORT: Literal[6]  # pn_type_t
PN_UINT: Literal[7]  # pn_type_t
PN_INT: Literal[8]  # pn_type_t
PN_CHAR: Literal[9]  # pn_type_t
PN_ULONG: Literal[10]  # pn_type_t
PN_LONG: Literal[11]  # pn_type_t
PN_TIMESTAMP: Literal[12]  # pn_type_t
PN_FLOAT: Literal[13]  # pn_type_t
PN_DOUBLE: Literal[14]  # pn_type_t
PN_DECIMAL32: Literal[15]  # pn_type_t
PN_DECIMAL64: Literal[16]  # pn_type_t
PN_DECIMAL128: Literal[17]  # pn_type_t
PN_UUID: Literal[18]  # pn_type_t
PN_BINARY: Literal[19]  # pn_type_t
PN_STRING: Literal[20]  # pn_type_t
PN_SYMBOL: Literal[21]  # pn_type_t
PN_DESCRIBED: Literal[22]  # pn_type_t
PN_ARRAY: Literal[23]  # pn_type_t
PN_LIST: Literal[24]  # pn_type_t
PN_MAP: Literal[25]  # pn_type_t
PN_INVALID: Literal[-1]  # pn_type_t

# Macro defined constants
PN_RECEIVED: ...
PN_ACCEPTED: ...
PN_REJECTED: ...
PN_RELEASED: ...
PN_MODIFIED: ...
PN_DECLARED: ...
PN_TRANSACTIONAL_STATE: ...
PN_DEFAULT_PRIORITY: ...
PN_OK: ...
PN_EOS: ...
PN_OVERFLOW: ...
PN_TIMEOUT: ...
PN_INTR: ...
PN_LOCAL_UNINIT:  ...
PN_LOCAL_ACTIVE:  ...
PN_LOCAL_CLOSED:  ...
PN_REMOTE_UNINIT: ...
PN_REMOTE_ACTIVE: ...
PN_REMOTE_CLOSED: ...
PN_TRACE_OFF: ...
PN_TRACE_RAW: ...
PN_TRACE_FRM: ...
PN_TRACE_DRV: ...
PN_VERSION_MAJOR: ...
PN_VERSION_MINOR: ...
PN_VERSION_POINT: ...


# Type aliases
pn_char_t = int
pn_decimal32_t = int
pn_decimal64_t = int
pn_distribution_mode_t = int
pn_durability_t = int
pn_event_type_t = int
pn_expiry_policy_t = int
pn_millis_t = int
pn_rcv_settle_mode_t = int
pn_sasl_outcome_t = int
pn_seconds_t = int
pn_sequence_t = int
pn_snd_settle_mode_t = int
pn_ssl_cert_subject_subfield = int
pn_ssl_hash_alg = int
pn_ssl_mode_t = int
pn_ssl_resume_status_t = int
pn_ssl_verify_mode_t = int
pn_state_t = int
pn_terminus_type_t = int
pn_timestamp_t = int
pn_trace_t = int
pn_type_t = int
pn_tracer_t = Any


# Structures
class pn_bytes_t:
    size: int
    start: bytes
    def __init__(self, bytes: Any) -> None: ...


class pn_collector_t: ...
class pn_condition_t: ...
class pn_connection_t: ...
class pn_data_t: ...


class pn_decimal128_t:
    bytes: bytes
    def __getitem__(self, index: int) -> pn_decimal128_t: ...


class pn_delivery_t: ...
class pn_disposition_t: ...
class pn_error_t: ...
class pn_event_t: ...
class pn_link_t: ...
class pn_message_t: ...
class pn_record_t: ...
class pn_sasl_t: ...
class pn_session_t: ...
class pn_ssl_domain_t: ...
class pn_ssl_t: ...
class pn_terminus_t: ...
class pn_transport_t: ...


class pn_uuid_t:
    bytes: bytes
    def __getitem__(self, index: int) -> pn_uuid_t: ...


class pn_atom_t:
    type: pn_type_t
    u: Any
    def __init__(self, value: Any) -> None: ...

class pn_custom_disposition_t: ...
class pn_received_disposition_t: ...
class pn_rejected_disposition_t: ...
class pn_modified_disposition_t: ...
class pn_declared_disposition_t: ...
class pn_transactional_disposition_t: ...


# More type aliases
pn_delivery_tag_t = pn_bytes_t
pn_msgid_t = pn_atom_t


# Functions
def pn_collector() -> pn_collector_t: ...
def pn_collector_free(collector: pn_collector_t) -> None: ...
def pn_collector_more(collector: pn_collector_t) -> bool: ...
def pn_collector_peek(collector: pn_collector_t) -> pn_event_t: ...
def pn_collector_pop(collector: pn_collector_t) -> bool: ...
def pn_collector_release(collector: pn_collector_t) -> None: ...
def pn_condition_clear(condition: pn_condition_t) -> None: ...
def pn_condition_get_description(condition: pn_condition_t) -> bytes: ...
def pn_condition_get_name(condition: pn_condition_t) -> bytes: ...
def pn_condition_info(condition: pn_condition_t) -> pn_data_t: ...
def pn_condition_is_set(condition: pn_condition_t) -> bool: ...
def pn_condition_set_description(condition: pn_condition_t, description: bytes) -> int: ...
def pn_condition_set_name(condition: pn_condition_t, name: bytes) -> int: ...
def pn_connection() -> pn_connection_t: ...
def pn_connection_attachments(connection: pn_connection_t) -> pn_record_t: ...
def pn_connection_close(connection: pn_connection_t) -> None: ...
def pn_connection_collect(connection: pn_connection_t, collector: pn_collector_t) -> None: ...
def pn_connection_condition(connection: pn_connection_t) -> pn_condition_t: ...
def pn_connection_desired_capabilities(connection: pn_connection_t) -> pn_data_t: ...
def pn_connection_error(connection: pn_connection_t) -> pn_error_t: ...
def pn_connection_get_authorization(connection: pn_connection_t) -> bytes: ...
def pn_connection_get_container(connection: pn_connection_t) -> bytes: ...
def pn_connection_get_hostname(connection: pn_connection_t) -> bytes: ...
def pn_connection_get_user(connection: pn_connection_t) -> bytes: ...
def pn_connection_offered_capabilities(connection: pn_connection_t) -> pn_data_t: ...
def pn_connection_open(connection: pn_connection_t) -> None: ...
def pn_connection_properties(connection: pn_connection_t) -> pn_data_t: ...
def pn_connection_release(connection: pn_connection_t) -> None: ...
def pn_connection_remote_condition(connection: pn_connection_t) -> pn_condition_t: ...
def pn_connection_remote_container(connection: pn_connection_t) -> bytes: ...
def pn_connection_remote_desired_capabilities(connection: pn_connection_t) -> pn_data_t: ...
def pn_connection_remote_hostname(connection: pn_connection_t) -> bytes: ...
def pn_connection_remote_offered_capabilities(connection: pn_connection_t) -> pn_data_t: ...
def pn_connection_remote_properties(connection: pn_connection_t) -> pn_data_t: ...
def pn_connection_set_authorization(connection: pn_connection_t, authzid: bytes) -> None: ...
def pn_connection_set_container(connection: pn_connection_t, container: bytes) -> None: ...
def pn_connection_set_hostname(connection: pn_connection_t, hostname: bytes) -> None: ...
def pn_connection_set_password(connection: pn_connection_t, password: bytes) -> None: ...
def pn_connection_set_user(connection: pn_connection_t, user: bytes) -> None: ...
def pn_connection_state(connection: pn_connection_t) -> int: ...
def pn_connection_transport(connection: pn_connection_t) -> pn_transport_t: ...
def pn_data(capacity: int) -> pn_data_t: ...
def pn_data_clear(data: pn_data_t) -> None: ...
def pn_data_copy(data: pn_data_t, src: pn_data_t) -> int: ...
def pn_data_decode(data: pn_data_t, bytes: bytes, size: int) -> int: ...
def pn_data_dump(data: pn_data_t) -> None: ...
def pn_data_encode(data: pn_data_t, bytes: bytes, size: int) -> int: ...
def pn_data_encoded_size(data: pn_data_t) -> int: ...
def pn_data_enter(data: pn_data_t) -> bool: ...
def pn_data_error(data: pn_data_t) -> pn_error_t: ...
def pn_data_exit(data: pn_data_t) -> bool: ...
def pn_data_free(data: pn_data_t) -> None: ...
def pn_data_get_array(data: pn_data_t) -> int: ...
def pn_data_get_array_type(data: pn_data_t) -> pn_type_t: ...
def pn_data_get_binary(data: pn_data_t) -> pn_bytes_t: ...
def pn_data_get_bool(data: pn_data_t) -> bool: ...
def pn_data_get_byte(data: pn_data_t) -> int: ...
def pn_data_get_char(data: pn_data_t) -> int: ...
def pn_data_get_decimal128(data: pn_data_t) -> pn_decimal128_t: ...
def pn_data_get_decimal32(data: pn_data_t) -> int: ...
def pn_data_get_decimal64(data: pn_data_t) -> int: ...
def pn_data_get_double(data: pn_data_t) -> float: ...
def pn_data_get_float(data: pn_data_t) -> float: ...
def pn_data_get_int(data: pn_data_t) -> int: ...
def pn_data_get_list(data: pn_data_t) -> int: ...
def pn_data_get_long(data: pn_data_t) -> int: ...
def pn_data_get_map(data: pn_data_t) -> int: ...
def pn_data_get_short(data: pn_data_t) -> int: ...
def pn_data_get_string(data: pn_data_t) -> pn_bytes_t: ...
def pn_data_get_symbol(data: pn_data_t) -> pn_bytes_t: ...
def pn_data_get_timestamp(data: pn_data_t) -> int: ...
def pn_data_get_ubyte(data: pn_data_t) -> int: ...
def pn_data_get_uint(data: pn_data_t) -> int: ...
def pn_data_get_ulong(data: pn_data_t) -> int: ...
def pn_data_get_ushort(data: pn_data_t) -> int: ...
def pn_data_get_uuid(data: pn_data_t) -> pn_uuid_t: ...
def pn_data_is_array_described(data: pn_data_t) -> bool: ...
def pn_data_is_described(data: pn_data_t) -> bool: ...
def pn_data_is_null(data: pn_data_t) -> bool: ...
def pn_data_lookup(data: pn_data_t, name: bytes) -> bool: ...
def pn_data_narrow(data: pn_data_t) -> None: ...
def pn_data_next(data: pn_data_t) -> bool: ...
def pn_data_prev(data: pn_data_t) -> bool: ...
def pn_data_put_array(data: pn_data_t, described: bool, type: pn_type_t) -> int: ...
def pn_data_put_binary(data: pn_data_t, bytes: pn_bytes_t) -> int: ...
def pn_data_put_bool(data: pn_data_t, b: bool) -> int: ...
def pn_data_put_byte(data: pn_data_t, b: int) -> int: ...
def pn_data_put_char(data: pn_data_t, c: int) -> int: ...
def pn_data_put_decimal128(data: pn_data_t, d: pn_decimal128_t) -> int: ...
def pn_data_put_decimal32(data: pn_data_t, d: int) -> int: ...
def pn_data_put_decimal64(data: pn_data_t, d: int) -> int: ...
def pn_data_put_described(data: pn_data_t) -> int: ...
def pn_data_put_double(data: pn_data_t, d: float) -> int: ...
def pn_data_put_float(data: pn_data_t, f: float) -> int: ...
def pn_data_put_int(data: pn_data_t, i: int) -> int: ...
def pn_data_put_list(data: pn_data_t) -> int: ...
def pn_data_put_long(data: pn_data_t, l: int) -> int: ...
def pn_data_put_map(data: pn_data_t) -> int: ...
def pn_data_put_null(data: pn_data_t) -> int: ...
def pn_data_put_short(data: pn_data_t, s: int) -> int: ...
def pn_data_put_string(data: pn_data_t, string: pn_bytes_t) -> int: ...
def pn_data_put_symbol(data: pn_data_t, symbol: pn_bytes_t) -> int: ...
def pn_data_put_timestamp(data: pn_data_t, t: int) -> int: ...
def pn_data_put_ubyte(data: pn_data_t, ub: int) -> int: ...
def pn_data_put_uint(data: pn_data_t, ui: int) -> int: ...
def pn_data_put_ulong(data: pn_data_t, ul: int) -> int: ...
def pn_data_put_ushort(data: pn_data_t, us: int) -> int: ...
def pn_data_put_uuid(data: pn_data_t, u: pn_uuid_t) -> int: ...
def pn_data_rewind(data: pn_data_t) -> None: ...
def pn_data_type(data: pn_data_t) -> pn_type_t: ...
def pn_data_widen(data: pn_data_t) -> None: ...
def pn_decref(object: None) -> int: ...
def pn_tostring(object: None) -> bytes: ...
def pn_delivery(link: pn_link_t, tag: pn_bytes_t) -> pn_delivery_t: ...
def pn_delivery_abort(delivery: pn_delivery_t) -> None: ...
def pn_delivery_aborted(delivery: pn_delivery_t) -> bool: ...
def pn_delivery_attachments(delivery: pn_delivery_t) -> pn_record_t: ...
def pn_delivery_link(delivery: pn_delivery_t) -> pn_link_t: ...
def pn_delivery_local(delivery: pn_delivery_t) -> pn_disposition_t: ...
def pn_delivery_local_state(delivery: pn_delivery_t) -> int: ...
def pn_delivery_partial(delivery: pn_delivery_t) -> bool: ...
def pn_delivery_pending(delivery: pn_delivery_t) -> int: ...
def pn_delivery_readable(delivery: pn_delivery_t) -> bool: ...
def pn_delivery_remote(delivery: pn_delivery_t) -> pn_disposition_t: ...
def pn_delivery_remote_state(delivery: pn_delivery_t) -> int: ...
def pn_delivery_settle(delivery: pn_delivery_t) -> None: ...
def pn_delivery_settled(delivery: pn_delivery_t) -> bool: ...
def pn_delivery_tag(delivery: pn_delivery_t) -> pn_bytes_t: ...
def pn_delivery_update(delivery: pn_delivery_t, state: int) -> None: ...
def pn_delivery_updated(delivery: pn_delivery_t) -> bool: ...
def pn_delivery_writable(delivery: pn_delivery_t) -> bool: ...
def pn_disposition_annotations(disposition: pn_disposition_t) -> pn_data_t: ...
def pn_disposition_condition(disposition: pn_disposition_t) -> pn_condition_t: ...
def pn_disposition_data(disposition: pn_disposition_t) -> pn_data_t: ...
def pn_disposition_get_section_number(disposition: pn_disposition_t) -> int: ...
def pn_disposition_get_section_offset(disposition: pn_disposition_t) -> int: ...
def pn_disposition_is_failed(disposition: pn_disposition_t) -> bool: ...
def pn_disposition_is_undeliverable(disposition: pn_disposition_t) -> bool: ...
def pn_disposition_set_failed(disposition: pn_disposition_t, failed: bool) -> None: ...
def pn_disposition_set_section_number(disposition: pn_disposition_t, section_number: int) -> None: ...
def pn_disposition_set_section_offset(disposition: pn_disposition_t, section_offset: int) -> None: ...
def pn_disposition_set_undeliverable(disposition: pn_disposition_t, undeliverable: bool) -> None: ...
def pn_disposition_type(disposition: pn_disposition_t) -> int: ...
def pn_custom_disposition(disposition: pn_disposition_t) -> pn_custom_disposition_t: ...
def pn_received_disposition(disposition: pn_disposition_t) -> pn_received_disposition_t: ...
def pn_rejected_disposition(disposition: pn_disposition_t) -> pn_rejected_disposition_t: ...
def pn_modified_disposition(disposition: pn_disposition_t) -> pn_modified_disposition_t: ...
def pn_declared_disposition(disposition: pn_disposition_t) -> pn_declared_disposition_t: ...
def pn_transactional_disposition(disposition: pn_disposition_t) -> pn_transactional_disposition_t: ...
def pn_custom_disposition_set_type(disposition: pn_custom_disposition_t, type: int) -> None: ...
def pn_custom_disposition_get_type(disposition: pn_custom_disposition_t) -> int: ...
def pn_custom_disposition_data(disposition: pn_custom_disposition_t) -> pn_data_t: ...
def pn_rejected_disposition_condition(disposition: pn_rejected_disposition_t) -> pn_condition_t: ...
def pn_received_disposition_get_section_number(disposition: pn_received_disposition_t) -> int: ...
def pn_received_disposition_set_section_number(disposition: pn_received_disposition_t, section_number: int) -> None: ...
def pn_received_disposition_get_section_offset(disposition: pn_received_disposition_t) -> int: ...
def pn_received_disposition_set_section_offset(disposition: pn_received_disposition_t, section_offset: int) -> None: ...
def pn_modified_disposition_is_failed(disposition: pn_modified_disposition_t) -> bool: ...
def pn_modified_disposition_set_failed(disposition: pn_modified_disposition_t, failed: bool) -> None: ...
def pn_modified_disposition_is_undeliverable(disposition: pn_modified_disposition_t) -> bool: ...
def pn_modified_disposition_set_undeliverable(disposition: pn_modified_disposition_t, undeliverable: bool) -> None: ...
def pn_modified_disposition_annotations(disposition: pn_modified_disposition_t) -> pn_data_t: ...
def pn_declared_disposition_get_id(disposition: pn_declared_disposition_t) -> pn_bytes_t: ...
def pn_declared_disposition_set_id(disposition: pn_declared_disposition_t, id: pn_bytes_t) -> None: ...
def pn_transactional_disposition_get_id(disposition: pn_transactional_disposition_t) -> pn_bytes_t: ...
def pn_transactional_disposition_set_id(disposition: pn_transactional_disposition_t, id: pn_bytes_t) -> None: ...
def pn_transactional_disposition_get_outcome_type(disposition: pn_transactional_disposition_t) -> int: ...
def pn_transactional_disposition_set_outcome_type(disposition: pn_transactional_disposition_t, outcome: int) -> None: ...
def pn_error_code(error: pn_error_t) -> int: ...
def pn_error_text(error: pn_error_t) -> bytes: ...
def pn_event_connection(event: pn_event_t) -> pn_connection_t: ...
def pn_event_context(event: pn_event_t) -> None: ...
def pn_event_delivery(event: pn_event_t) -> pn_delivery_t: ...
def pn_event_link(event: pn_event_t) -> pn_link_t: ...
def pn_event_session(event: pn_event_t) -> pn_session_t: ...
def pn_event_transport(event: pn_event_t) -> pn_transport_t: ...
def pn_event_type(event: pn_event_t) -> pn_event_type_t: ...
def pn_event_type_name(type: pn_event_type_t) -> bytes: ...
def pn_incref(object: None) -> None: ...
def pn_link_advance(link: pn_link_t) -> bool: ...
def pn_link_attachments(link: pn_link_t) -> pn_record_t: ...
def pn_link_available(link: pn_link_t) -> int: ...
def pn_link_close(link: pn_link_t) -> None: ...
def pn_link_condition(link: pn_link_t) -> pn_condition_t: ...
def pn_link_credit(link: pn_link_t) -> int: ...
def pn_link_current(link: pn_link_t) -> pn_delivery_t: ...
def pn_link_detach(link: pn_link_t) -> None: ...
def pn_link_drain(receiver: pn_link_t, credit: int) -> None: ...
def pn_link_drained(link: pn_link_t) -> int: ...
def pn_link_draining(receiver: pn_link_t) -> bool: ...
def pn_link_error(link: pn_link_t) -> pn_error_t: ...
def pn_link_flow(receiver: pn_link_t, credit: int) -> None: ...
def pn_link_free(link: pn_link_t) -> None: ...
def pn_link_get_drain(link: pn_link_t) -> bool: ...
def pn_link_head(connection: pn_connection_t, state: int) -> pn_link_t: ...
def pn_link_is_receiver(link: pn_link_t) -> bool: ...
def pn_link_is_sender(link: pn_link_t) -> bool: ...
def pn_link_max_message_size(link: pn_link_t) -> int: ...
def pn_link_name(link: pn_link_t) -> bytes: ...
def pn_link_next(link: pn_link_t, state: int) -> pn_link_t: ...
def pn_link_offered(sender: pn_link_t, credit: int) -> None: ...
def pn_link_open(link: pn_link_t) -> None: ...
def pn_link_properties(link: pn_link_t) -> pn_data_t: ...
def pn_link_queued(link: pn_link_t) -> int: ...
def pn_link_rcv_settle_mode(link: pn_link_t) -> pn_rcv_settle_mode_t: ...
def pn_link_recv(receiver: pn_link_t, bytes: bytes, n: int) -> int: ...
def pn_link_remote_condition(link: pn_link_t) -> pn_condition_t: ...
def pn_link_remote_max_message_size(link: pn_link_t) -> int: ...
def pn_link_remote_properties(link: pn_link_t) -> pn_data_t: ...
def pn_link_remote_rcv_settle_mode(link: pn_link_t) -> pn_rcv_settle_mode_t: ...
def pn_link_remote_snd_settle_mode(link: pn_link_t) -> pn_snd_settle_mode_t: ...
def pn_link_remote_source(link: pn_link_t) -> pn_terminus_t: ...
def pn_link_remote_target(link: pn_link_t) -> pn_terminus_t: ...
def pn_link_send(sender: pn_link_t, bytes: bytes, n: int) -> int: ...
def pn_link_session(link: pn_link_t) -> pn_session_t: ...
def pn_link_set_drain(receiver: pn_link_t, drain: bool) -> None: ...
def pn_link_set_max_message_size(link: pn_link_t, size: int) -> None: ...
def pn_link_set_rcv_settle_mode(link: pn_link_t, mode: pn_rcv_settle_mode_t) -> None: ...
def pn_link_set_snd_settle_mode(link: pn_link_t, mode: pn_snd_settle_mode_t) -> None: ...
def pn_link_snd_settle_mode(link: pn_link_t) -> pn_snd_settle_mode_t: ...
def pn_link_source(link: pn_link_t) -> pn_terminus_t: ...
def pn_link_state(link: pn_link_t) -> int: ...
def pn_link_target(link: pn_link_t) -> pn_terminus_t: ...
def pn_link_unsettled(link: pn_link_t) -> int: ...
def pn_message() -> pn_message_t: ...
def pn_message_annotations(msg: pn_message_t) -> pn_data_t: ...
def pn_message_body(msg: pn_message_t) -> pn_data_t: ...
def pn_message_clear(msg: pn_message_t) -> None: ...
def pn_message_decode(msg: pn_message_t, bytes: bytes, size: int) -> int: ...
def pn_message_error(msg: pn_message_t) -> pn_error_t: ...
def pn_message_free(msg: pn_message_t) -> None: ...
def pn_message_get_address(msg: pn_message_t) -> bytes: ...
def pn_message_get_content_encoding(msg: pn_message_t) -> bytes: ...
def pn_message_get_content_type(msg: pn_message_t) -> bytes: ...
def pn_message_get_correlation_id(msg: pn_message_t) -> pn_atom_t: ...
def pn_message_get_creation_time(msg: pn_message_t) -> int: ...
def pn_message_get_delivery_count(msg: pn_message_t) -> int: ...
def pn_message_get_expiry_time(msg: pn_message_t) -> int: ...
def pn_message_get_group_id(msg: pn_message_t) -> bytes: ...
def pn_message_get_group_sequence(msg: pn_message_t) -> int: ...
def pn_message_get_id(msg: pn_message_t) -> pn_atom_t: ...
def pn_message_get_priority(msg: pn_message_t) -> int: ...
def pn_message_get_reply_to(msg: pn_message_t) -> bytes: ...
def pn_message_get_reply_to_group_id(msg: pn_message_t) -> bytes: ...
def pn_message_get_subject(msg: pn_message_t) -> bytes: ...
def pn_message_get_ttl(msg: pn_message_t) -> int: ...
def pn_message_get_user_id(msg: pn_message_t) -> pn_bytes_t: ...
def pn_message_instructions(msg: pn_message_t) -> pn_data_t: ...
def pn_message_is_durable(msg: pn_message_t) -> bool: ...
def pn_message_is_first_acquirer(msg: pn_message_t) -> bool: ...
def pn_message_is_inferred(msg: pn_message_t) -> bool: ...
def pn_message_properties(msg: pn_message_t) -> pn_data_t: ...
def pn_message_set_address(msg: pn_message_t, address: bytes) -> int: ...
def pn_message_set_content_encoding(msg: pn_message_t, encoding: bytes) -> int: ...
def pn_message_set_content_type(msg: pn_message_t, type: bytes) -> int: ...
def pn_message_set_correlation_id(msg: pn_message_t, id: pn_atom_t) -> int: ...
def pn_message_set_creation_time(msg: pn_message_t, time: int) -> int: ...
def pn_message_set_delivery_count(msg: pn_message_t, count: int) -> int: ...
def pn_message_set_durable(msg: pn_message_t, durable: bool) -> int: ...
def pn_message_set_expiry_time(msg: pn_message_t, time: int) -> int: ...
def pn_message_set_first_acquirer(msg: pn_message_t, first: bool) -> int: ...
def pn_message_set_group_id(msg: pn_message_t, group_id: bytes) -> int: ...
def pn_message_set_group_sequence(msg: pn_message_t, n: int) -> int: ...
def pn_message_set_id(msg: pn_message_t, id: pn_atom_t) -> int: ...
def pn_message_set_inferred(msg: pn_message_t, inferred: bool) -> int: ...
def pn_message_set_priority(msg: pn_message_t, priority: int) -> int: ...
def pn_message_set_reply_to(msg: pn_message_t, reply_to: bytes) -> int: ...
def pn_message_set_reply_to_group_id(msg: pn_message_t, reply_to_group_id: bytes) -> int: ...
def pn_message_set_subject(msg: pn_message_t, subject: bytes) -> int: ...
def pn_message_set_ttl(msg: pn_message_t, ttl: int) -> int: ...
def pn_message_set_user_id(msg: pn_message_t, user_id: pn_bytes_t) -> int: ...
def pn_unsettled_head(link: pn_link_t) -> pn_delivery_t: ...
def pn_unsettled_next(delivery: pn_delivery_t) -> pn_delivery_t: ...
def pn_receiver(session: pn_session_t, name: bytes) -> pn_link_t: ...
def pn_sasl(transport: pn_transport_t) -> pn_sasl_t: ...
def pn_sasl_allowed_mechs(sasl: pn_sasl_t, mechs: bytes) -> None: ...
def pn_sasl_config_name(sasl: pn_sasl_t, name: bytes) -> None: ...
def pn_sasl_config_path(sasl: pn_sasl_t, path: bytes) -> None: ...
def pn_sasl_done(sasl: pn_sasl_t, outcome: pn_sasl_outcome_t) -> None: ...
def pn_sasl_extended() -> bool: ...
def pn_sasl_get_allow_insecure_mechs(sasl: pn_sasl_t) -> bool: ...
def pn_sasl_get_authorization(sasl: pn_sasl_t) -> bytes: ...
def pn_sasl_get_mech(sasl: pn_sasl_t) -> bytes: ...
def pn_sasl_get_user(sasl: pn_sasl_t) -> bytes: ...
def pn_sasl_outcome(sasl: pn_sasl_t) -> pn_sasl_outcome_t: ...
def pn_sasl_set_allow_insecure_mechs(sasl: pn_sasl_t, insecure: bool) -> None: ...
def pn_sender(session: pn_session_t, name: bytes) -> pn_link_t: ...
def pn_session(connection: pn_connection_t) -> pn_session_t: ...
def pn_session_attachments(session: pn_session_t) -> pn_record_t: ...
def pn_session_close(session: pn_session_t) -> None: ...
def pn_session_condition(session: pn_session_t) -> pn_condition_t: ...
def pn_session_connection(session: pn_session_t) -> pn_connection_t: ...
def pn_session_free(session: pn_session_t) -> None: ...
def pn_session_get_incoming_capacity(session: pn_session_t) -> int: ...
def pn_session_get_outgoing_window(session: pn_session_t) -> int: ...
def pn_session_head(connection: pn_connection_t, state: int) -> pn_session_t: ...
def pn_session_incoming_bytes(session: pn_session_t) -> int: ...
def pn_session_next(session: pn_session_t, state: int) -> pn_session_t: ...
def pn_session_open(session: pn_session_t) -> None: ...
def pn_session_outgoing_bytes(session: pn_session_t) -> int: ...
def pn_session_remote_condition(session: pn_session_t) -> pn_condition_t: ...
def pn_session_set_incoming_capacity(session: pn_session_t, capacity: int) -> None: ...
def pn_session_set_outgoing_window(session: pn_session_t, window: int) -> None: ...
def pn_session_state(session: pn_session_t) -> int: ...
def pn_ssl(transport: pn_transport_t) -> pn_ssl_t: ...
def pn_ssl_domain(mode: pn_ssl_mode_t) -> pn_ssl_domain_t: ...
def pn_ssl_domain_allow_unsecured_client(domain: pn_ssl_domain_t) -> int: ...
def pn_ssl_domain_free(domain: pn_ssl_domain_t) -> None: ...
def pn_ssl_domain_set_ciphers(domain: pn_ssl_domain_t, ciphers: bytes) -> int: ...
def pn_ssl_domain_set_credentials(domain: pn_ssl_domain_t, credential_1: bytes, credential_2: bytes, password: bytes) -> int: ...
def pn_ssl_domain_set_peer_authentication(domain: pn_ssl_domain_t, mode: pn_ssl_verify_mode_t, trusted_CAs: bytes) -> int: ...
def pn_ssl_domain_set_protocols(domain: pn_ssl_domain_t, protocols: bytes) -> int: ...
def pn_ssl_domain_set_trusted_ca_db(domain: pn_ssl_domain_t, certificate_db: bytes) -> int: ...
def pn_ssl_get_cert_fingerprint(ssl0: pn_ssl_t, fingerprint: bytes, fingerprint_length: int, hash_alg: pn_ssl_hash_alg) -> int: ...
def pn_ssl_get_cipher_name(ssl: pn_ssl_t, buffer: bytes, size: int) -> bool: ...
def pn_ssl_get_protocol_name(ssl: pn_ssl_t, buffer: bytes, size: int) -> bool: ...
def pn_ssl_get_remote_subject(ssl: pn_ssl_t) -> bytes: ...
def pn_ssl_get_remote_subject_subfield(ssl0: pn_ssl_t, field: pn_ssl_cert_subject_subfield) -> bytes: ...
def pn_ssl_init(ssl: pn_ssl_t, domain: pn_ssl_domain_t, session_id: bytes) -> int: ...
def pn_ssl_present() -> bool: ...
def pn_ssl_resume_status(ssl: pn_ssl_t) -> pn_ssl_resume_status_t: ...
def pn_ssl_set_peer_hostname(ssl: pn_ssl_t, hostname: bytes) -> int: ...
def pn_terminus_capabilities(terminus: pn_terminus_t) -> pn_data_t: ...
def pn_terminus_copy(terminus: pn_terminus_t, src: pn_terminus_t) -> int: ...
def pn_terminus_filter(terminus: pn_terminus_t) -> pn_data_t: ...
def pn_terminus_get_address(terminus: pn_terminus_t) -> bytes: ...
def pn_terminus_get_distribution_mode(terminus: pn_terminus_t) -> pn_distribution_mode_t: ...
def pn_terminus_get_durability(terminus: pn_terminus_t) -> pn_durability_t: ...
def pn_terminus_get_expiry_policy(terminus: pn_terminus_t) -> pn_expiry_policy_t: ...
def pn_terminus_get_timeout(terminus: pn_terminus_t) -> int: ...
def pn_terminus_get_type(terminus: pn_terminus_t) -> pn_terminus_type_t: ...
def pn_terminus_is_dynamic(terminus: pn_terminus_t) -> bool: ...
def pn_terminus_outcomes(terminus: pn_terminus_t) -> pn_data_t: ...
def pn_terminus_properties(terminus: pn_terminus_t) -> pn_data_t: ...
def pn_terminus_set_address(terminus: pn_terminus_t, address: bytes) -> int: ...
def pn_terminus_set_distribution_mode(terminus: pn_terminus_t, mode: pn_distribution_mode_t) -> int: ...
def pn_terminus_set_durability(terminus: pn_terminus_t, durability: pn_durability_t) -> int: ...
def pn_terminus_set_dynamic(terminus: pn_terminus_t, dynamic: bool) -> int: ...
def pn_terminus_set_expiry_policy(terminus: pn_terminus_t, policy: pn_expiry_policy_t) -> int: ...
def pn_terminus_set_timeout(terminus: pn_terminus_t, timeout: int) -> int: ...
def pn_terminus_set_type(terminus: pn_terminus_t, type: pn_terminus_type_t) -> int: ...
def pn_transport() -> pn_transport_t: ...
def pn_transport_attachments(transport: pn_transport_t) -> pn_record_t: ...
def pn_transport_bind(transport: pn_transport_t, connection: pn_connection_t) -> int: ...
def pn_transport_capacity(transport: pn_transport_t) -> int: ...
def pn_transport_close_head(transport: pn_transport_t) -> int: ...
def pn_transport_close_tail(transport: pn_transport_t) -> int: ...
def pn_transport_closed(transport: pn_transport_t) -> bool: ...
def pn_transport_condition(transport: pn_transport_t) -> pn_condition_t: ...
def pn_transport_connection(transport: pn_transport_t) -> pn_connection_t: ...
def pn_transport_error(transport: pn_transport_t) -> pn_error_t: ...
def pn_transport_get_channel_max(transport: pn_transport_t) -> int: ...
def pn_transport_get_frames_input(transport: pn_transport_t) -> int: ...
def pn_transport_get_frames_output(transport: pn_transport_t) -> int: ...
def pn_transport_get_idle_timeout(transport: pn_transport_t) -> int: ...
def pn_transport_get_max_frame(transport: pn_transport_t) -> int: ...
def pn_transport_get_remote_idle_timeout(transport: pn_transport_t) -> int: ...
def pn_transport_get_remote_max_frame(transport: pn_transport_t) -> int: ...
def pn_transport_get_user(transport: pn_transport_t) -> bytes: ...
def pn_transport_is_authenticated(transport: pn_transport_t) -> bool: ...
def pn_transport_is_encrypted(transport: pn_transport_t) -> bool: ...
def pn_transport_log(transport: pn_transport_t, message: bytes) -> None: ...
def pn_transport_peek(transport: pn_transport_t, dst: bytes, size: int) -> int: ...
def pn_transport_pending(transport: pn_transport_t) -> int: ...
def pn_transport_pop(transport: pn_transport_t, size: int) -> None: ...
def pn_transport_push(transport: pn_transport_t, src: bytes, size: int) -> int: ...
def pn_transport_remote_channel_max(transport: pn_transport_t) -> int: ...
def pn_transport_require_auth(transport: pn_transport_t, required: bool) -> None: ...
def pn_transport_require_encryption(transport: pn_transport_t, required: bool) -> None: ...
def pn_transport_set_channel_max(transport: pn_transport_t, channel_max: int) -> int: ...
def pn_transport_set_idle_timeout(transport: pn_transport_t, timeout: int) -> None: ...
def pn_transport_set_max_frame(transport: pn_transport_t, size: int) -> None: ...
def pn_transport_set_server(transport: pn_transport_t) -> None: ...
def pn_transport_set_tracer(transport: pn_transport_t, tracer: Any) -> None: ...
def pn_transport_tick(transport: pn_transport_t, now: int) -> int: ...
def pn_transport_trace(transport: pn_transport_t, trace: int) -> None: ...
def pn_transport_unbind(transport: pn_transport_t) -> int: ...
def init() -> None: ...
def pn_cast_pn_connection(x: None) -> pn_connection_t: ...
def pn_cast_pn_session(x: None) -> pn_session_t: ...
def pn_cast_pn_link(x: None) -> pn_link_t: ...
def pn_cast_pn_delivery(x: None) -> pn_delivery_t: ...
def pn_cast_pn_transport(x: None) -> pn_transport_t: ...
def pn_pyref_incref(object: None) -> None: ...
def pn_pyref_decref(object: None) -> None: ...
def pn_pytracer(transport: pn_transport_t, message: bytes) -> None: ...
def pn_collector_put_py(collector: pn_collector_t, context: None, type: pn_event_type_t) -> pn_event_t: ...
def pn_data_format_py(data: pn_data_t, bytes: bytes, size: int) -> int: ...
def pn_event_class_name_py(event: pn_event_t) -> bytes: ...
def pn_message_encode_py(msg: pn_message_t, bytes: bytes, size: int) -> int: ...
def pn_record_def_py(record: pn_record_t) -> None: ...
def pn_record_get_py(record: pn_record_t) -> None: ...
def pn_record_set_py(record: pn_record_t, value: None) -> None: ...
def pn_ssl_get_peer_hostname_py(ssl: pn_ssl_t, hostname: bytes, size: int) -> int: ...
def free() -> None: ...
