from typing import (
    Any,
    Callable,
    Optional,
)

class EmptyAttrs:
    def __contains__(self, name: str) -> bool: ...


class Wrapper:
    def __init__(self, impl_or_constructor: Callable, get_context: Optional[Callable] = None) -> None: ...
    def __del__(self) -> None: ...
    def __getattr__(self, name: str) -> object: ...
    def __setattr__(self, name: str, value: object) -> None: ...
    def __delattr__(self, name: str) -> None: ...
    def __eq__(self, other: Any) -> bool: ...
    def __ne__(self, other: Any) -> bool: ...
    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...

PYCTX:int = ...
